{
    "info" : {
        "summary" : "Execution of automated tests for release v1.3",
        "description" : "This execution is automatically created when importing execution results from an external source",
        "version" : "", 
        "user" : "",
        "revision" : "",
        "startDate" : "2014-08-30T11:47:35+01:00",
        "finishDate" : "2014-08-30T11:53:00+01:00",
        "testPlanKey" : "",
        "testEnvironments": ["QA"]
    },
    "tests" : [
            {
            "testKey" : "ATP-36",
            "start" : "2014-08-30T11:51:00+01:00",
            "finish" : "2014-08-30T11:52:30+01:00",
            "comment" : "Execution failed. Example #5 FAIL.",
            "status" : "FAIL",
            "evidences" : [
                {
   "data":"",
   "filename":"image227.html",
   "contentType":"text/html"
                }
                          ]
            }
              ]
}